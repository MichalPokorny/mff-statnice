1. je komplet v TeXu
{IP 9.9.2011}
Definujte pojmy suprema a maxima.
Popište, jaký je mezi nimi rozdíl.
Je pravda, že každá podmnožina R má supremum?
Napište příklad podmnožiny racionálních čísel, která v racionálních číslech nemá supremum.

2 - komplet v texu
2.4
{Surynek} Dostal jsem vety o strední hodnote. U tech vet jsem mel jeden dukaz, u druhého ideu a u tretího zacátek triku, který se tam použije (musel bych ješte docela premýšlet, abych to poskládal dohromady). Ale jemu to stacilo (taky zkoušel, jak tomu rozumím). Takže od pana Surynka za 1. 
2.5
{IOI 8.9.2011}
- definujte Tayloruv polynom
- navrhnete postup na priblizny vypocet sin(5) pomoci TP

Pohoda, rozvoj v nule, dosadit 5 a je to. Na ustni Cepek trochu vrtal do tvaru zbytku a prisel se na to ze ho neumim, ale presel to bez karani jen slovy "podle me to neni ono" a slo se dal.


3.X
(neznámý) kritéria konvergence číselných řad 
(Kučera) Po chvíli (kdy jsem nenapsal téměř nic, prostě vokno) připsal ještě Číselné řady, a když jsem se v záchvatu nervozity stále nechytal, začal mi na papír kreslit nápovědu. Kreslil tak dlouho, než jsem řekl "No jo, ono je to vlastně takhle"... To se opakovalo ještě jednou, sám jsem neřekl skoro nic. K mému velkému překvapení mi bylo sděleno, že to stačí, sice jen na slabší trojku, ale stačí.
(IP 21.6.2011)
Napiste definici konvergence rad.
Rozhodnete a zduvodnete, zda konverguji rady: 1/n, 1/n^2, sin(n)/n

{IOI 8.9.2011}
definujte konvergenciu rady. Zistite, pre ake 'k' konverguje rada \sum 1/(n^{(1+1/k)})

3.1
(Fiala) Posloupnost funkcí + stejnoměrná spojitost  - Napsal jsem zase to, na co jsem si vzpomněl z materiálů (ty tři definice na posloupnost a asi čtyři "věty"). Měl jsem ještě ukázat rozdíly mezi nimi na nějakých konkrétních funkcích... Pan Fiala měl sice záludnější otázky, ale zkoušení bylo naprosto férové a vcelku mírné. 
3.2
(Klazar) Napsal jsem definici mocnine rady, stred konvergence, zdrbal zapis polomeru konvergence (zapomnel ze je 1 lomeno), vztah polomeru konvergence a konvergence mocninne rady. Napsal vlastnosti geometricke rady (taky je to mocninna rada) + ze je hodna. A horempadem jsem chtel utect k Taylorovi.
Avsak dostal jsem otazky - co se deje kdyz |x - a| = R, pote najit radu s touto vlastnosti, ktera diverguje a ktera konverguje. (1.uspech, 2. neuspech (suma nul fakt nestacila)), p.Klazar me zaskocil ukolem spocitat nekolik polomeru konvergence ruznych rad (vedlo na ruzne limity (n-ta odmocnina z 2^n) pro n -> inf). 

(Kučera) napsal jsem jen definici, co to je poloměr konvergence a ten vzoreček, kterým se počítá. Toť vše. Fiala s Kučerou se pak ptali na definice těch typů konvergence, jestli neznám nějakou speciální mocninnou řadu (střelil jsem Taylorovu), tak jsme nějak přešli k aproximaci funkcí v bodě Taylorovým polynomem (uff, žádné zbytky!) a nakonec po mně chtěli aproximovat sinus v nule kubickým polynomem, což je jen dosazení do Taylora řádu 3, ale to jsem si v dané psychické situaci neuvědomil :-p. Nakonec jsem to napsal a byli spokojení. 
3.3
(Klazar) Pak konecne Taylor (museli u me tehdy stat vsichni rohati, ze nechtel tvary zbytku to by byla konecna) + napsat Tayloruv rozvoj pro sin(x), cos(x), e^(x) a ln(x). Tuto otazku jsem fakt nechtel a byl jsem hodne nervozni - naflakal jsem ve zmatku nekolik zbytecnych chyb. P.Klazar byl opravdu tolerantni, vzdy v klidu pockal nez se vyjadrim a ihned 2x opravim. V jedne chvili povedel, ze mu to staci (nevedel jsem znamku) a odesel.
Statnicove materialy zde stacily bohate. 
(Klazar) Taylorove rady Moc som toho nevedel, len definicie a tu jednu vetu o suvisloti mocnineeho radu a Taylorovho radu samozrejme bez sance na dokaz Tak mi dal spocitat este nejake Taylorove rozvoje v nule ( sinus, logaritmus, exponenciala ). Znamku neviem. (max 3)
3.4
(Majerech) Fourierovy řady (ty má Majerech asi rád - ale stačí v podstatě jen definice) 
----------------1-3 jsou komplet ----------------

4
4.3
{IP 8.9.2011}
Mějme body [0,0,0], [1,0,0], [0,2,0], [0,0,3]. Vícerozměrným integrálem spočtěte objem jejich konvexního obalu.

5 -komplet v texu

6 -komplet v texu

8.1
{IOI 21.6.2011}
Konecna telesa
definoval jsem pres mnozina, bin. op., grupoid, monoid..., okruh, teleso a
pak jsem vypsal axiomy jeste zvlast jak to bylo v lin. alg.
Chteli po mne souvislost prvocisel s poctem prvku v telese. Priklady. 
{IP 9.9.2011}
Definujte pojem grupa a homomorfismus.
Definujte permutační grupu.
Potom tam byly obrázky dvou stavů hry ekvivalentní Loydově patnáctce (http://cs.wikipedia.org/wiki/Patn%C3%A1ctka). Za úkol bylo rozhodnout, jestli lze nějakou posloupností tahů dospět z jednoho stavu do druhého a zdůvodnit. 
8.3
{IP 9.9.2011}
Definujte pojem grupa, homomorfismus a isomorfismus grup.
Mějme zbytkovou grupu Z_8 a Z_2 X Z_4 . Ukažte zda jsou grupy isomorfní a proč.
Existuje mezi libovolnými dvěma grupami vždy homomorfismus? Proč? Uveďte (proti)příklad.

9-15 - komplet v Texu

16 v techu 
----------------17 je komplet ----------------
17 v techu













Informatika

1 - v techu

1.3
NIKDY NEBYLA ZKOUSENA?

2
{IOI 8.9.2011}
definujte jazyky v chomskeho hierarchii a im prislusne automaty a gramatiku. Dbajte a determinzmus a netederminizmus automatov

{IP 9.9.2011}
Definujte třídy jazyků podle Chomského hierarchie a popište jejich gramatiky.
Definujte inkluze mezi třídami.

3.1
{Skopal} Casova zlozitost
3.2
{IP 9.9.2011}
Definujte třídy složitosti P a NP.
Definujte NP-těžký problém a NP-úplnost.
Jaké metody se v praxi používají k řešení NP-těžkých prolémů?
Uveďte tři příklady NP-úplných problémů.
3.3 vsechno je v TeXu
3.4
{Žemlička} Napsal jsem tam toho myslim dost, popis a slozitost operaci, prumerna vyska pr. stromu, u AVL rotace, kolik max rotaci pri jake operaci, max hloubku AVL stromu, i tu haldu, vcetne pekne reprezentace v poli (tam jsem nenapsal, ze syny najdu na pozici a2i a a2i+1, na coz se pak doplnkove ptal). Pro doplneni chtel CC stromy a splay-stromy (tam jsem zvoral, ze se vyhledavany zaznam "strci" do korene, pote, co zvedl oboci, jsem se rychle opravil "Ja jsem blbej, zarotuje az do korene"). Halda se mu nezdala, ac jsem tam napsal to vyuziti pri trideni na vnejsi pameti (predtrideni dvojitou haldou) - doufal jsem, ze ho to potesi, kdyz jsme to brali na OZD. ;) ... "Hmmm, a co jiny haldy?" Tak jsem priznal, ze nevim, ze jsem akorat slysel o Fibonaciho haldach. Chtel neco s vice-arnimi haldami a haldami, jejichz nazev jsem slysel snad poprve v zivote.
{Kopecký} BVS a vyvažování: (AVL + RedBlack). Dotaz na optimální vyhledávací stromy: popsal jsem splay (aniž jsem tušil, že se tak jmenují), ale že na statické o.v.s. se hodí dynamické programování, jsem si "vzpomněl" až po nápovědě. 
{Kopecký} Tohle jsem mel vse, az na malou chybicku u AVL, ze pri pridani staci provest max. jednu rotaci a take jsem nevededel vyhledavaci stromy, kde krom klice je ulozena i potencionalni cetnost hledani.
{Skopal} B-stromy a analogie s RB stromy - nechtěl víc než definici a odhady složitosti FIND v nejhorším a nejlepším případě 
{Kopecký} BVS a vyvazovani - tady chtel Kopecky slyset rozdily mezi AVL a R&B, algoritmus pro optimalni binarni vyhledavaci strom, splay stromy
3.5
{Skopal} Hashovani: Popsal jsem princip hashovani, nejaky zpusoby reseni kolizi. Pak se zeptal jak ma vypadat dobra hashovaci funkce. Rek jsem neco jako ze musi univerzum klicu rozlozit rovnomerne po tabulce, ale to mu nestacilo. Chtel neco konkretnejsiho a nakonec se spokojil s odpovedi, ze by to melo byt neco jako generator pseudonahodnych cisel. To, ze jsem nedokazal odpovedet na to jak takovy generator vypada, mu asi ani moc nevadilo. Pak se zeptal na externi hashovani, ale kdyz uvidel mou vystrasenou tvar, tak rek, ze nic, ze se to uci az na magistru. Pak jsem rek neco o perfektnim hashovani a lehce popsal Cormacka. Padlo jeste par otazek obecne o perfektnim hashovani, coz jsem zodpovedel a to mu stacilo.

{Skopal} dostal mě na otázkách ohledně hashovací fce - jaké jsou na ní kladené požadavky (nejsem si vědom, že bychom to probírali tak podrobně), hned se pak přesunul k Univerzálnímu a Perfektnímu hashování - když jsem mu neřekl perfektní, tak se zvedl a řekl to stačí... a nezašli jsme ani ke kolizím, které jsem měl vypracované (dostal jsem od něj dílčí známku za 3).

{IOI 8.9.2011}
definujte co je to hasovanie, perfektne hasovanie, univerzalne hasovanie a ( tramtadaa ) Litwickovo hasovanie

3.6 trideni
{Skopal} Třídící algoritmy (díky díky! takhle dobrou otázku jsem si ani snad nepředstavoval)
{Skopal} Tak to jsem si myslel, že si ze mě dělá srandu, takovou jednodcuhou věc, kde bude háček...nebyl asi skoro nikde. Akorát na mě celá komise koukala, tak jsem necítil uplně košer, když je kolem mě asi 6 lidí a kouká na mě, co říká. (známku nevím)
{Hnětynka} třídící algoritmy, takže levou zadní za 1
{Hippies} a já to chápu takto:

porovnávací alg. - heap, quick, bubble, insert, ...

přihrádkové třídění - bucket, counting, redix sort (http://hippies.matfyz.info/poznamky/predmet_ads1/gallery.php?ID=2)

třídící sítě - např. to bitonické (http://hippies.matfyz.info/poznamky/predmet_ads2/gallery.php?ID=23)

sekvenční třídění - tudíž předpokládám je něco jiného, dle mého názoru to znamená, že třídí data sekvenčně, tj. jak mu přijdou do ruky, tedy např. merge sort
{IOI 8.9.2011}
- popiste algoritmus insersort, proc je vhodne pouzivat ho na predtridene pole?
- popiste algoritmus quicksort, jak zavisi jeho slozitost na vyberu pivota?

Tak insertsort jsem se pokousel vycucat z prstu coz mi vubec neslo, takze jsem po 20 ztracenych minutach rezignoval a cesky ho okecal ze se tam vkladaji prvky do pole a ty vetsi se posouvaji doprava (doted nevim jak to je), ale komise byla moc hodna a presla to jako ze to mam spravne. Na ustni se zajmali i o pametovou slozitost, kterou jsem na papire vubec neresil, ale to jsem uhadl ze oba algoritmy se daji resit v jednom poli, takze n.
3.7
{Kopecký} Grafove algoritmy - testovani souvislosti, topologicke trideni a pak hledani nejkratsi cesty (Dijkstra, Bellman-Ford a Floyd-Warshall)
{?} Grafove algoritmy - prehladavanie do sirky, hlbky, kostra, cesta
{Mlýnková} Grafové algoritmy: obecně základy, pak speciálně souvislost, nejkratší cesta (Mlýnková): Obecné věci a výčet algoritmů mi zabrali na papíře dost místa, tak jsem ukázal, co mám. Kupodivu byl zájem o přesné definice (tah, sled, cesta, souvislost v or./neor. grafu, nejkratší cesta, záp. cyklus, k-souvislost). Algoritmus na k-souvislost jsem nevěděl (víte někdo?), zřejmě nevadilo. Mohl jsem si vybrat, který z algoritmů na cesty popíšu podrobněji. Vybral jsem si "násobení" matic, vysvětlil jsem, proč funguje správně, co se stane pro záp. cyklus, časovou složitost (pro chytré násobení díky asociativitě).
{Kofron} grafové algoritmy - kostra, tok, hĺbka, šírka, topologické triedenie, definícia problému, čo je riešením, kedy existuje, algoritmy, ktoré to riešia s popisom implementácie vrátane časovej zložitosti, porovnanie hĺbky a šírky...
{Čepek} Grafové algoritmy - tok v síti, topologické třídění, vzdálenosti, kostry
{Yaghob} grafove algoritmy (akorat jsem nevedel k cemu ze to slouzi minimalni kostry, hlavne ze vim jakou maj slozitost :oops: ) 
3.9
{Bednárek} Algoritmy vyhledávání v textu U těch algoritmů se mě ještě dodatečně zeptal jak bych řešil vyhledávání regulárního výrazu, naštestí už předtím se ptal na determinismus automatu u aho-corrasica tak bylo lehké si odvodit, že to bude nedeterministický automat, ještě se ptal jak bude dlouhý u regulárního výrazu délky p, tak to jsem odvodil, že stačí p stavů, ještě ho zajímalo jeho determinizace -> stavy jsou množiny stavů původního automatu, stavů max 2 na p-tou.
I celkově úplně v pohodě. 
3.11
(Skopal) RSA, DES (tady chtěl Skopal konkrétní vzorečky, jak funguje symetrická šifra nebo šifrování s věřejným klíčem ho nezájímalo)
3.12-13
vsechno je v TeXu
 
----------------4 je komplet ----------------
4.2 Konceptualni model
(Skopal): Ještě jednou mi tu řeknete "primární klíč" a rovnou vás tady vyhodím (a pak o chvíli později) V ŽIVOTĚ... UŽ NEŘEKNETE... PRIMÁRNÍ KLÍČ!!  jinak je to obecny cerveny prapor na nej.. proste tam jsou klíče, primární klíč je zajimavy "jen" tim, ze je podle nej setrideny ten soubor 
4.3 Rel.alg
vsechno je v TeXu
4.4
(Mlynkova) Tady jsem se tesil, ze je to pekna otazka, ale bylo mi ukazano, ze toho moc neumim. Celkem jsem vyjmenoval a popsal NF + algoritmy na dosazeni(dekompozice a synteza). Horsi uz to bylo s predvedenim na prikladu, tak nakonec za 3. 
(Mlynkova) Tohle neni uplne moje parketa, takze jsem se snazil rict to co jsem vedel s jistotou. Zaklad byl asi v poradku, jenom jsem nevedel zadnej algoritmus pro prevod schematu do nejake te normalni formy. Odhad 2-3
(Bednarek) U těch normálních forem chtěl jenom příklady a výhody nevýhody, takže pohodička. 
{IOI 8.9.2011}
definujte naco sluzia normalne formy u databazii, napiste ake anomalie a kedy mozu vznikat na konkretnych prikladoch 

{IP 8.9.2011}
Převod schématu do 3NF, nebyly explicitně zadány funkční závislosti, mělo se to vykoukat.
Schéma bylo zhruba
UCITEL = (e-mail, jmeno, katedra)
PREDMET = ( kod, nazev, obsah )
CVICENI = ( ucebna, adresa_ucebny, kod_predmetu, nazev_predmetu, jmeno_ucitele, e-mail_ucitele )

4.5 SQL 
(Rychta) tak jsem rekla ze SQL je norma, priklady jeji implementace, co zahrnuje (popis schemat databaze, dotazovaci jazyk, transakce, intergitni omezeni ...), zakladni popis SELECT a dalsich basic dotazu, dal se me ptali na to nad jakou DB SQL pracuje (->relacni), zda se pouziva SQL i u jinych typu, jako je XML (ne), co je to SQL dotaz (je to prikaz, neni to program, musi byt necim interpretovan), co to je transakce (mnozina operaci co se tvari atomicky) atd... jo a co neni v textu a chteli: prikazy pro prirazovani prav uzivatelum (GRANT), prikazy pro transakce (COMMIT/ROLLBACK) 
(Yaghob) 3 A4, +- popis příkazů, 2-3 doplňující otázky typu, co je trigger?
4.6 Transakce
(Zavoral) Popsal jsem ACID s mírným nedorozuměním u konzistence (je důležité řici, že DB v konz. stavu splňuje všechny integritní omezení), kdy obecně má smysl používat transakce (víceuživatelské DB sys.), napsal jsem pár slov k rozvrhování a příklad C2PL. Celkově v pohodě, sem tam drobné záseky, ale Dr. Zavoral spíš poradil, resp. směroval k tomu, abych řekl, co chtěl slyšet. 
(Bednarek) Vyplodil jsem požadavky na transakce, zamotal se ve vysvětlování konfliktů a konfliktové uspořádatelnosti, věděl jsem zamykací protokoly, optimistické protokoly a časová razítka i něco málo o implementaci transakcí. 
(?) Transakce jsem moc neumel, popsal jsem ACID, usporadatelnost, konfliktni dvojce (WW, WR, RW), neznal jsem precedencni graf. 
(Skopal) Co me docela prekvapilo byla Skopalova otazka na to, jestli se v realnem provozu nejak berou v potaz rozvrhy transakci a graf konfliktu. Odpoved je ne, protoze s tim zpetne uz nejde nic udelat a misto toho se pouzivaji prave uzamykaci protokoly, ktere vynuty urcite vlastnosti rozvrhu dopredu. 
(Galambos) transakce a jejich vlastnosti -- napsal jsem mu tam ACID + nejake dalsi obecna veci okolo ala co je to rozvrh a pod.; pak se me ptal na protokol casovych razitek, coz jsem nevedel a nedokazal vymyslet. 
{IOI 8.9.2011}
- co je to transakce, co jsou vlastnosti ACID?
- popiste dvoufazovy zamykaci protokol
- necht T1,T2 jsou transakce: T1: read(x), write(y=x+1) T2: read(y), write(x=t+1). Popiste jejich beh pri dvoufazovem zamykacim protokolu

U zamykaciho protokolu stacilo napsat ze spociva ve fazi pridelovani zamku a vraceni zamku, ze transakce ktera jednou vrati zamek uz zadny nedostane.
Vic jsem nevedel, ale pan Hnetnyka me dokopal ke spravne odpovedi, ze se ty transakce serializuji za sebe, aby nevznikl deadlock. (na papir jsem nakreslil krasny deadlock :) )
4.8 XML, XML Schema
(Mlýnková) jsem dostal XSLT a o tom jazyku jsem slysel tak maximalne na co se to pouziva, ... to ji 
bohuzel nestacilo 
(Bednarek) XML, XSLT a trochu HTML protokoly- jsme se o nich zacli bavit (vedel jsem toho o nich asi jako vetsina z vas) a nakonec se konverzace prenesla na site obecneji (nastesti), takze to bylo v pohode.. 
(?) Nestačí vědět co to je, co je k tomu přidružené a povrchní představu o tom jak to funguje, či k čemu se to používá. Je dobré znát alespoň základní syntaxi, představu o tom jak funguje XSLT procesor, atd.  
4.9 B-Stromy
{IP 21.6.2011} Popiste B-stromy. Porovnejte rychlost B-stromu s binarnim vyhledavacim stromem, ktere jsou ulozeny v sekundarni pameti.
{?} B-stromy - napsal jsem všechno, co jsem o nich věděl, insert, delete, B+, B* stromy, výhody a nevýhody, použití atd.
{?} B-stromy - definice, find, insert, delete, pak jsem ještě řešil nějaké nepříliš záludné otázky (složitost insertu v nejhorším případě, jak se používa B+ strom v databázích, kolik místa zabíra jeden uzel B-stromu).
{Bednarek} B-stromy (+vyuzitie v databazach (B*) a praca na "disku")... podobne, par viet sme prehodili o pocte pristupov/mnozstve nacitanych dat v porovnani s binarnymi stromami...
{Skopal} B-stromy a analogie s RB stromy - nechtěl víc než definici a odhady složitosti FIND v nejhorším a nejlepším případě
{Bednárek} Organizace dat na vnější paměti, B-stromy a jejich varianty. Popísal som rozdiel vnútorná/vonkajšia, sekvenčný/blokový prístup, mergesort u sekvenčného a B-stromy u blokového (databáza)+varianty. 
{IP 9.9.2011}
Definujte B-strom.
Určete časovou složitost operací vyhledání, vkládání a mazání z B-stromu.
Popište, proč je výhodné používat B-stromy při ukládání na externí paměť. 
5.3
vsechno v TeXu
5.6
{IP 8.9.2011}
int* ptr = null;

void Producent()
{
int data = SomeCoplexOperation();
ptr = &data;
}

void Consumer()
{
while(ptr == null) { }
printf("%i\n",&ptr);
}


Definujte rozhrani semaforu a jeho semantiku.
Dale predpokladejme, ze cteni a prirazeni do promene ptr jsou atomicke, potom stale tento kod obsahuje race condition.
Urcete kde k ni dochazi, a opravte ji pomoci semaforu (ci jinak). Fce Consumer a Producer jsou spusteny prave jednou
kazda z jineho vlakna.

viz: http://forum.matfyz.info/viewtopic.php?f=418&t=7873&p=33010#p33001

5.9
{IOI 21.6.2011}
Virtualni pamet
page, page fault, TLB, implementace v OS/HW, jak presne funguje TLB na
konkretnim pripadu. 

{IP 8.9.2011}
tady si to nepamatuju úplně přesně, někdo mě kdyžtak opravte.
Byl zadán podobný zdroják :

    void main()
    {
    void * P = malloc (1024);
    void * N = malloc (256);
    }


Pak byly zadány hodnoty (decimální) ukazatelů P a N. Dotaz byl jestli by se Mezi P a N vešel ještě jeden malloc o nějaké velikosti.
NSD(P,N) = 16 ... popište čím by to mohlo být a proč.

Pak bylo ještě něco s určováním velikosti stránky z adresy 0xFF10, která zůstala na addr sběrnici po dotazu na ukazatel na první byte prvního bloku. ? Výsledek ale souvisel s hodnotami toho P a N podle toho co Bednárek říkal na ústní, takže to sem asi bude muset dát někdo kdo si to pamatuje lépe.

5.13
{IOI 21.6.2011}
TCP/IP - prevazne IP cast, kratce o TCP - routovani, fragmentace, ...
Nakreslili mi tam diagram a mel jsem ukazat, jak to funguje na nejake siti.
Resila se i implementace NATu. Tam jsem jim napsal i rozchozeni NAT
maskarady v iptables a tomu se zasmali (neni to potreba) :) 

6.3 Neproc.
{Bureš} Neprocedurální programování. chtěl základní věci, dobrý zkoušející.
{Tůma} Testuje zda to clovek ma naucene jen jako basnicku anebo to umi skutecne pouzit a zapsat. U neproceduralniho programovani (u kolegy za mnou) chtel ukazku zda umi na pozadani vyrobit nekolik konstruktu.
{Bures} Neproceduralni a logicke programovani - Povidani o prologu, a chtel i presne jak probiha unifikace a backtracking. Nakonec jsem si nabeh na nuz a rekl ze existuje operator rezu(jinak by se na nej skoro urcite nezeptal), a ze se pomoci nej da udelat negace. S tou negaci jsem pak zapasil 10 min jen abych se prastil do hlavy a rekl trivialni, nervozita udela sve. Pak se vyptaval na funkcionalni programovani, rozdily oproti proceduralnimu(chtel hlavne vedet ze se daji funkce pouzit i jako paramatry funkci). V Prologu a necem funkcionalnim napsat kus neceho, syntax ho ale nezajimala, stacilo neco co by po trivialnim opraveni slo pustit v Prologu nebo Haskellu(nebo necem podobnem). Celkem bez vetsich obtizi 1
{?} Neprocedurální programování - zkoušející prolétl popsané papíry a řekl, že mu to stačí. Ptal se jenom na to, co se mi na neprocedurálním programování nejvíc líbí. 